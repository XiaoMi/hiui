@import '~@hi-ui/core-css/lib/index.scss';

$prefix: '#{$component-prefix}-textarea' !default;

.#{$prefix} {
  $input-padding-width: calc(#{use-spacing(6)} - 1px);
  $input-shadow: 0 0 0 2px use-color-mode('primary', 100);
  $input-error-shadow: 0 0 0 2px use-color-mode('danger', 100);

  position: relative;
  display: inline-block;
  box-sizing: border-box;
  width: 100%;

  &__text {
    @include input-reset;

    // basic
    flex: 1;
    display: block;
    box-sizing: border-box;
    transition-property: all;
    transition-duration: use-motion-duration('normal');
    transition-timing-function: use-motion-bezier('normal');
    width: 100%;
    min-height: use-height-size(8);
    font-size: inherit;
    line-height: inherit;
    color: use-color('gray', 700);
    resize: vertical;
    overflow: auto;
    z-index: auto;
    word-break: break-all;

    &::placeholder {
      color: use-color('gray', 400);

      .#{$prefix}--appearance-unset & {
        color: use-color('gray', 400);
      }
    }

    &:disabled {
      cursor: not-allowed;
    }
  }

  &__inner {
    position: relative;
    height: auto;
    width: 100%;
    box-sizing: border-box;
    font-size: inherit;
    border: use-border-size('normal') use-color-static('transparent');
    background-color: use-color-static('white');
    transition-property: all;
    transition-duration: use-motion-duration('normal');
    transition-timing-function: use-motion-bezier('normal');
    outline: none;
    z-index: auto;

    &:not(.#{$prefix}__inner--disabled):hover {
      z-index: calc(#{use-zindex('absolute')} + 1);
    }

    &:not(.#{$prefix}__inner--disabled).#{$prefix}__inner--focused {
      z-index: calc(#{use-zindex('absolute')} + 1);
    }
  }

  &__header {
    display: flex;
    align-items: center;
    flex-shrink: 0;
    color: use-color('gray', 700);
    font-size: inherit;
    text-align: center;
  }

  &--size {
    &-sm {
      // height: use-height-size(6);
      height: auto;
      font-size: use-text-size('sm');
      line-height: use-text-lineheight('sm');

      .#{$prefix}__text {
        padding: 1px $input-padding-width;
      }

      .#{$prefix}__header {
        padding: 1px $input-padding-width 0;
      }

      .#{$prefix}__inner {
        border-radius: use-border-radius('normal');
      }
    }

    &-md {
      height: auto;
      // height: use-height-size(8);
      font-size: use-text-size('normal');
      line-height: use-text-lineheight('normal');

      .#{$prefix}__text {
        padding: 4px $input-padding-width;
      }

      .#{$prefix}__header {
        padding: 4px $input-padding-width 0;
      }

      .#{$prefix}__inner {
        border-radius: use-border-radius('normal');
      }
    }

    &-lg {
      // height: use-height-size(10);
      height: auto;
      font-size: use-text-size('lg');
      line-height: use-text-lineheight('lg');

      .#{$prefix}__text {
        padding: 7px $input-padding-width;
      }

      .#{$prefix}__header {
        padding: 7px $input-padding-width 0;
      }

      .#{$prefix}__inner {
        border-radius: use-border-radius('normal');
      }
    }
  }

  &--appearance {
    &-line {
      .#{$prefix}__inner {
        border-color: use-color('gray', 300);

        &:not(.#{$prefix}__inner--disabled):hover {
          border-color: use-color-mode('primary');
        }

        &:not(.#{$prefix}__inner--disabled).#{$prefix}__inner--focused {
          border-color: use-color-mode('primary');
        }

        &:not(.#{$prefix}__inner--disabled).#{$prefix}__inner--invalid {
          border-color: use-color-mode('error');

          &:hover {
            border-color: use-color-mode('error');
          }

          // &.#{$prefix}__inner--focused {
          //   box-shadow: $input-error-shadow;
          // }
        }
      }
    }

    &-unset {
      .#{$prefix}__text {
        padding-left: 0;
        padding-right: 0;

        &::placeholder {
          color: use-color('gray', 500);
        }
      }

      &:not(.#{$prefix}__inner--disabled) .#{$prefix}__inner:hover {
        background-color: use-color('gray', 100);
      }
    }

    &-filled {
      .#{$prefix}__inner {
        background-color: use-color('gray', 100);

        &:not(.#{$prefix}__inner--disabled):hover {
          background-color: use-color-static('white');
          border-color: use-color-mode('primary');
        }

        &:not(.#{$prefix}__inner--disabled).#{$prefix}__inner--focused {
          border-color: use-color-mode('primary');
          background-color: use-color-static('white');
        }

        &:not(.#{$prefix}__inner--disabled).#{$prefix}__inner--invalid {
          border-color: use-color-mode('error');

          &:hover {
            border-color: use-color-mode('error');
          }

          // &.#{$prefix}__inner--focused {
          //   box-shadow: $input-error-shadow;
          // }
        }
      }
    }

    &-underline {
      .#{$prefix}__text {
        padding-left: 0;
        padding-right: 0;
      }

      .#{$prefix}__inner {
        &::after {
          content: '';
          box-sizing: border-box;
          display: block;
          position: absolute;
          bottom: 0;
          // 两边透明边框各负 1px
          left: -1px;
          right: -1px;
          border-bottom: 1px solid use-color('gray', 300);
          transition: all 0.3s;
        }

        &:not(.#{$prefix}__inner--disabled):hover {
          &::after {
            border-bottom-color: use-color-mode('primary');
          }
        }

        &:not(.#{$prefix}__inner--disabled).#{$prefix}__inner--focused {
          &::after {
            border-bottom-color: use-color-mode('primary');
          }
        }

        &:not(.#{$prefix}__inner--disabled).#{$prefix}__inner--invalid {
          &::after {
            border-bottom-color: use-color-mode('error');
          }

          &.hover {
            &::after {
              border-bottom-color: use-color-mode('error');
            }
          }
        }
      }
    }

    &-line,
    &-filled {
      .#{$prefix}__inner {
        &.#{$prefix}__inner--disabled {
          color: use-color('gray', 400);
          -webkit-text-fill-color: use-color('gray', 400);
          background-color: use-color('gray', 50);

          .#{$prefix}__text {
            color: use-color('gray', 400);
          }
        }
      }
    }

    &-unset,
    &-underline {
      .#{$prefix}__inner {
        &.#{$prefix}__inner--disabled {
          color: use-color('gray', 400);
          -webkit-text-fill-color: use-color('gray', 400);
          background-color: transparent;

          .#{$prefix}__text {
            color: use-color('gray', 400);
          }
        }
      }
    }
  }

  &-wrapper {
    width: 100%;

    &--show-count {
      position: relative;

      .#{$prefix}__text {
        padding-bottom: use-spacing(10);
      }

      &[data-count]::after {
        content: attr(data-count);
        color: use-color('gray', 500);
        font-size: use-text-size('sm');
        font-weight: use-font-weight('normal');
        line-height: use-text-lineheight('sm');
        white-space: nowrap;
        pointer-events: none;
        float: right;
        position: absolute;
        right: use-spacing(5);
        bottom: use-spacing(1);
        z-index: calc(#{use-zindex('absolute')} + 1);
      }
    }
  }
}
